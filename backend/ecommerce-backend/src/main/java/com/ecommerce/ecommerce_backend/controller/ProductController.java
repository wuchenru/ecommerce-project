package com.ecommerce.ecommerce_backend.controller;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ecommerce.ecommerce_backend.model.Product;
import com.ecommerce.ecommerce_backend.repository.ProductRepository;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/products") // This means URL's start with /demo (after Application path)
public class ProductController {
	@Autowired // This means to get the bean called ProductRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private ProductRepository ProductRepository;

	@PostMapping(path="/add") // Map ONLY POST Requests
	public @ResponseBody String addNewProduct (@RequestParam String name, @RequestParam String description,
			@RequestParam Double price) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Product n = new Product();
		n.setName(name);
		n.setDescription(description);
		n.setPrice(price);
		ProductRepository.save(n);
		return "Product Saved\n";
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<Product> getAllProducts() {
		// This returns a JSON or XML with the Products
		System.out.println("Fetch all Products from the DB");
		return ProductRepository.findAll();
	}
}
